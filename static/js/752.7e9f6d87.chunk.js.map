{"version":3,"file":"static/js/752.7e9f6d87.chunk.js","mappings":"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","sources":["webpack://gilanis/./src/components/BookTable/BookTableForm.module.css?9eaf","components/BookTable/BookTableForm.js","components/Pages/BookTablePage.js","hooks/use-Http.js","hooks/use-input.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"auth\":\"BookTableForm_auth__EKc87\",\"control\":\"BookTableForm_control__vhWyA\",\"actions\":\"BookTableForm_actions__hn4xy\",\"toggle\":\"BookTableForm_toggle__Ke-qw\",\"order\":\"BookTableForm_order__05GnP\",\"button-orderSuccess\":\"BookTableForm_button-orderSuccess__r0g3K\",\"invalid\":\"BookTableForm_invalid__bR9DY\"};","import classes from \"./BookTableForm.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-Http\";\nimport useInput from \"../../hooks/use-input\";\n\nconst BookTableForm = () => {\n  const navigate = useNavigate();\n  const [LoggingIn, setLoggingIn] = useState(false);\n  const [bookingConfirmed, setBookingConfirmed] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const { sendRequest, error } = useHttp();\n\n  // using custom input hook\n\n  const {\n    value: enteredName,\n    error: enteredNameError,\n    isValid: enteredNameIsValid,\n    inputHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    clear: nameClear,\n  } = useInput((value) => value.trim() !== `` && value.trim().includes(` `));\n\n  const {\n    value: enteredEmail,\n    error: enteredEmailError,\n    isValid: enteredEmailIsValid,\n    inputHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    clear: emailClear,\n  } = useInput((value) =>\n    value\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      )\n  );\n\n  const {\n    value: enteredMobile,\n    error: enteredMobileError,\n    isValid: enteredMobileIsValid,\n    inputHandler: mobileChangeHandler,\n    blurHandler: mobileBlurHandler,\n    clear: mobileClear,\n  } = useInput((value) => value.trim().length === 11);\n\n  const {\n    value: enteredPeople,\n    error: enteredPeopleError,\n    isValid: enteredPeopleIsValid,\n    inputHandler: peopleChangeHandler,\n    blurHandler: peopleBlurHandler,\n    clear: peopleClear,\n  } = useInput((value) => +value.trim() > 0 && +value.trim() < 11);\n\n  const {\n    value: enteredDate,\n    error: enteredDateError,\n    isValid: enteredDateIsValid,\n    inputHandler: dateChangeHandler,\n    blurHandler: dateBlurHandler,\n    clear: dateClear,\n  } = useInput((value) => value);\n\n  const {\n    value: enteredTime,\n    error: enteredTimeError,\n    isValid: enteredTimeIsValid,\n    inputHandler: timeChangeHandler,\n    blurHandler: timeBlurHandler,\n    clear: timeClear,\n  } = useInput((value) => value);\n\n  useEffect(() => {\n    if (\n      enteredEmailIsValid &&\n      enteredNameIsValid &&\n      enteredMobileIsValid &&\n      enteredPeopleIsValid &&\n      enteredDateIsValid &&\n      enteredTimeIsValid\n    ) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [\n    enteredEmailIsValid,\n    enteredNameIsValid,\n    enteredMobileIsValid,\n    enteredPeopleIsValid,\n    enteredDateIsValid,\n    enteredTimeIsValid,\n  ]);\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n\n    if (!formIsValid) return;\n\n    const firebaseUrl = `https://react-tester-9d1b5-default-rtdb.europe-west1.firebasedatabase.app/bookings.json`;\n\n    const requestData = {\n      url: firebaseUrl,\n      method: \"POST\",\n      body: {\n        name: enteredName,\n        email: enteredEmail,\n        mobile: enteredMobile,\n        groupSize: enteredPeople,\n        date: enteredDate,\n        time: enteredTime,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const dataGrabber = (data) => {\n      if (data) {\n        setLoggingIn(true);\n        setBookingConfirmed(true);\n      }\n    };\n\n    sendRequest(requestData, dataGrabber);\n\n    nameClear();\n    emailClear();\n    mobileClear();\n    peopleClear();\n    dateClear();\n    timeClear();\n  };\n\n  const processedHandler = () => {\n    setTimeout(() => {\n      navigate(`/`, { replace: true });\n    }, 1000);\n  };\n\n  const emailClasses = enteredEmailError\n    ? `${classes.control} ${classes.invalid}`\n    : `${classes.control}`;\n  const nameClasses = enteredNameError\n    ? `${classes.control} ${classes.invalid}`\n    : `${classes.control}`;\n  const mobileClasses = enteredMobileError\n    ? `${classes.control} ${classes.invalid}`\n    : `${classes.control}`;\n  const peopleClasses = enteredPeopleError\n    ? `${classes.control} ${classes.invalid}`\n    : `${classes.control}`;\n  const dateClasses = enteredDateError\n    ? `${classes.control} ${classes.invalid}`\n    : `${classes.control}`;\n  const timeClasses = enteredTimeError\n    ? `${classes.control} ${classes.invalid}`\n    : `${classes.control}`;\n\n  const locale = navigator.language;\n\n  const currentDate = new Intl.DateTimeFormat(locale, {\n    year: `numeric`,\n    month: `numeric`,\n    day: `numeric`,\n  }).format(new Date());\n\n  const currentTime = new Intl.DateTimeFormat(locale, {\n    hour: `numeric`,\n    minute: `numeric`,\n  }).format(new Date());\n\n  return (\n    <section className=\"app-bg section-padding\">\n      <div className={classes.auth}>\n        {bookingConfirmed && (\n          <section className={classes.order}>\n            <p style={{ color: `var(--color-white)` }} className=\"p-cormorant\">\n              Thank You! Your Booking has been confirmed.\n            </p>\n            <button\n              onClick={processedHandler}\n              className={`custom-button ${classes[`button-orderSuccess`]}`}\n              style={{ fontFamily: `var(--font-alt)` }}\n            >\n              Close\n            </button>\n          </section>\n        )}\n        {!bookingConfirmed && error && (\n          <div className=\"flex-center\">\n            <div>\n              <p className=\"p-opensans\">{error.message}</p>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                style={{\n                  marginTop: `2rem`,\n                  fontFamily: `var(--font-alt)`,\n                  fontWeight: 400,\n                }}\n                className=\"custom-button\"\n                onClick={() => navigate(`/home`, { replace: true })}\n              >\n                Retry\n              </button>\n            </div>\n          </div>\n        )}\n        {!bookingConfirmed && !error && (\n          <React.Fragment>\n            <h1 className=\"headtext-cormorant\">Book A Table</h1>\n            <form onSubmit={submitHandler}>\n              <div>\n                <div className={nameClasses}>\n                  <label htmlFor=\"name\">Your Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    value={enteredName}\n                    onChange={nameChangeHandler}\n                    onBlur={nameBlurHandler}\n                    placeholder=\"John Doe\"\n                    required\n                  />\n                  {enteredNameError && (\n                    <p className=\"p-opensans\">Please enter your Name</p>\n                  )}\n                </div>\n                <div className={emailClasses}>\n                  <label htmlFor=\"email\">Your Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    value={enteredEmail}\n                    onChange={emailChangeHandler}\n                    onBlur={emailBlurHandler}\n                    placeholder=\"johndoe@gilanis.com\"\n                    required\n                  />\n                  {enteredEmailError && (\n                    <p className=\"p-opensans\">Please enter a valid e-mail</p>\n                  )}\n                </div>\n                <div className={mobileClasses}>\n                  <label htmlFor=\"mobile\">Your Mobile No.</label>\n                  <input\n                    type=\"number\"\n                    id=\"mobile\"\n                    value={enteredMobile}\n                    onChange={mobileChangeHandler}\n                    onBlur={mobileBlurHandler}\n                    minLength={11}\n                    maxLength={11}\n                    placeholder=\"07956958347\"\n                    required\n                  />\n                  {enteredMobileError && (\n                    <p className=\"p-opensans\">\n                      Please enter a valid UK mobile number.\n                    </p>\n                  )}\n                </div>\n                <div className={peopleClasses}>\n                  <label htmlFor=\"people\">No. of People</label>\n                  <input\n                    type=\"number\"\n                    id=\"people\"\n                    value={enteredPeople}\n                    onChange={peopleChangeHandler}\n                    onBlur={peopleBlurHandler}\n                    min={1}\n                    max={10}\n                    step={1}\n                    placeholder=\"1\"\n                    required\n                  />\n                  {enteredPeopleError && (\n                    <p className=\"p-opensans\">\n                      Gilani's Restaurant can accomodate 1-10 people per group.\n                    </p>\n                  )}\n                </div>\n                <div className={dateClasses}>\n                  <label htmlFor=\"date\">Booking Date</label>\n                  <input\n                    type=\"date\"\n                    id=\"date\"\n                    value={enteredDate}\n                    onChange={dateChangeHandler}\n                    onBlur={dateBlurHandler}\n                    min={currentDate}\n                    max=\"2023-01-01\"\n                    placeholder={currentDate}\n                    required\n                  />\n                  {enteredDateError && (\n                    <p className=\"p-opensans\">\n                      Sorry, Please choose another date.\n                    </p>\n                  )}\n                </div>\n                <div className={timeClasses}>\n                  <label htmlFor=\"time\">Booking Date</label>\n                  <input\n                    type=\"time\"\n                    id=\"time\"\n                    value={enteredTime}\n                    onChange={timeChangeHandler}\n                    onBlur={timeBlurHandler}\n                    min=\"11:00\"\n                    max=\"23:00\"\n                    placeholder={currentTime}\n                    required\n                  />\n                  {enteredTimeError && (\n                    <p className=\"p-opensans\">\n                      Our Opening Times are 11am - 11pm Mon-Sun.\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div style={{ marginBottom: `2rem` }} className={classes.actions}>\n                {LoggingIn && <button>Please Wait...</button>}\n                {!LoggingIn && <button>Book</button>}\n              </div>\n            </form>\n          </React.Fragment>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default BookTableForm;\n","import React from \"react\";\nimport BookTableForm from \"../BookTable/BookTableForm\";\n\nconst BookTablePage = () => {\n  return (\n    <React.Fragment>\n      <BookTableForm />\n    </React.Fragment>\n  );\n};\n\nexport default BookTablePage;\n","import { useCallback, useState } from \"react\";\n\nconst TIMEOUT = (sec) => {\n  return new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(new Error(`Request Failed! Session Timeout after ${sec} seconds`));\n    }, sec * 1000);\n  });\n};\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [finished, setFinished] = useState(false);\n\n  const sendRequest = useCallback(async (requestConfig, dataGrabber) => {\n    setIsLoading(true);\n    try {\n      const { url, method, headers, body } = requestConfig;\n      const response = await Promise.race([\n        fetch(url, {\n          method: method ?? `GET`,\n          body: JSON.stringify(body) ?? null,\n          headers: headers ?? {},\n        }),\n        TIMEOUT(10),\n      ]);\n\n      if (!response.ok)\n        throw new Error(\n          `${response.status}! Sorry, Log In Failed. Have you signed up?`\n        );\n\n      const result = await response.json();\n\n      dataGrabber(result);\n      setFinished(true);\n    } catch (error) {\n      setError(error);\n    }\n    setIsLoading(false);\n  }, []);\n\n  return {\n    isLoading,\n    error,\n    finished,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n","import { useReducer } from \"react\";\n\nconst inputReducer = (state, action) => {\n  if (action.type === `INPUT`) {\n    return {\n      value: action.value,\n      isTouched: state.isTouched,\n    };\n  }\n\n  if (action.type === `BLUR`) {\n    return {\n      value: state.value,\n      isTouched: true,\n    };\n  }\n\n  if (action.type === `CLEAR`) {\n    return {\n      value: ``,\n      isTouched: false,\n    };\n  }\n};\nconst useInput = (validateInput) => {\n  const [inputState, dispatchInputStateActions] = useReducer(inputReducer, {\n    value: ``,\n    isTouched: false,\n  });\n\n  const isInputValid = validateInput(inputState.value);\n  const hasError = !isInputValid && inputState.isTouched;\n\n  const inputValueChangeHandler = (event) => {\n    dispatchInputStateActions({ type: `INPUT`, value: event.target.value });\n  };\n\n  const inputBlurHandler = () => {\n    dispatchInputStateActions({ type: `BLUR` });\n  };\n\n  const clearInput = () => {\n    dispatchInputStateActions({ type: `CLEAR` });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: isInputValid,\n    error: hasError,\n    inputHandler: inputValueChangeHandler,\n    blurHandler: inputBlurHandler,\n    clear: clearInput,\n  };\n};\n\nexport default useInput;\n"],"names":["navigate","useNavigate","useState","LoggingIn","setLoggingIn","bookingConfirmed","setBookingConfirmed","formIsValid","setFormIsValid","useHttp","sendRequest","error","useInput","value","trim","includes","enteredName","enteredNameError","enteredNameIsValid","isValid","nameChangeHandler","inputHandler","nameBlurHandler","blurHandler","nameClear","clear","toLowerCase","match","enteredEmail","enteredEmailError","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","emailClear","length","enteredMobile","enteredMobileError","enteredMobileIsValid","mobileChangeHandler","mobileBlurHandler","mobileClear","enteredPeople","enteredPeopleError","enteredPeopleIsValid","peopleChangeHandler","peopleBlurHandler","peopleClear","enteredDate","enteredDateError","enteredDateIsValid","dateChangeHandler","dateBlurHandler","dateClear","enteredTime","enteredTimeError","enteredTimeIsValid","timeChangeHandler","timeBlurHandler","timeClear","useEffect","submitHandler","event","preventDefault","url","method","body","name","email","mobile","groupSize","date","time","headers","data","emailClasses","classes","nameClasses","mobileClasses","peopleClasses","dateClasses","timeClasses","locale","navigator","language","currentDate","Intl","DateTimeFormat","year","month","day","format","Date","currentTime","hour","minute","className","style","color","onClick","setTimeout","replace","fontFamily","message","type","marginTop","fontWeight","onSubmit","htmlFor","id","onChange","onBlur","placeholder","required","minLength","maxLength","min","max","step","marginBottom","TIMEOUT","sec","Promise","_","reject","Error","isLoading","setIsLoading","setError","finished","setFinished","useCallback","requestConfig","dataGrabber","race","fetch","JSON","stringify","response","ok","status","json","result","inputReducer","state","action","isTouched","validateInput","useReducer","inputState","dispatchInputStateActions","isInputValid","hasError","target"],"sourceRoot":""}